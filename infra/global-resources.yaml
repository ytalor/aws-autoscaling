Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

  IAMRoleARN:
    Type: 'String'
    Description: 'IAM Role ARN for your EC2 instances'  

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: security-group-devops
      GroupDescription: security-group-devops
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: LoadBalancer-Devops
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup

  LBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "target-group-devops"
      VpcId: !Ref VPC
      Port: 80
      TargetType: instance
      Protocol: HTTP

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VPCId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        Fn::GetAZs: 
          Ref: "AWS::Region"
      LaunchConfigurationName:
        Ref: LaunchConfig
      DesiredCapacity: '3'
      MinSize: '1'
      MaxSize: '4'
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT15M

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref LatestLinuxAmiId
      InstanceType: t2.micro
      IamInstanceProfile: !Ref IAMRoleARN
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            # install codedeploy agent
            sudo yum update -y
            sudo yum install -y ruby wget
            wget https://aws-codedeploy-eu-west-1.s3.eu-west-1.amazonaws.com/latest/install
            chmod +x ./install
            sudo ./install auto
            # signal success
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}


Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName

  Listener:
    Description: A reference to a port 80 listener
    Value: !Ref LBListener
